# Shell path to GCC
ifeq (${OS},Linux)
CC := $(shell which gcc)
CXX := $(shell which g++)
endif

# Debugging flags
CFLAGS := "-O0"
CFLAGS += "-g3"
CFLAGS += "-ggdb"
#CFLAGS += "-no-pie"
LIBC_VERSION := "2.31"

LIBC_LOADER := $(shell realpath ../../libc_versions/${LIBC_VERSION}/ld-${LIBC_VERSION}.so)

# Instrumentation flags
SRC_FILE := "src/example.c"
SRC_FILE += "src/utils.c"
SRC_FILE += "src/server.c"
OUT_FOLDER := "src/"
OUT_FILE := "server"

##############################

all: build patch
all_asan: build_asan patch 

build:
	@ ${CC} ${SRC_FILE} -o ${OUT_FOLDER}/${OUT_FILE} ${CFLAGS}
	@ ${CC} ${SRC_FILE} -o ${OUT_FOLDER}/.${OUT_FILE} ${CFLAGS}
	@ cp ${OUT_FOLDER}.gdbinit_reg $(OUT_FOLDER).gdbinit
	@ sed -i '2 s/.*/(cd \/home\/pwn_heap\/Desktop\/heap_training\/modules\/final\/src\/ \&\& LD_LIBRARY_PATH="\/usr\/lib\/x86_64-linux-gnu" LD_PRELOAD="\/home\/pwn_heap\/Desktop\/heap_training\/libc_versions\/2.31\/libc-2.31.so" .\/.server)/g' ./start.sh

build_asan: 
	@ ${CC} ${SRC_FILE} -o ${OUT_FOLDER}/${OUT_FILE} ${CFLAGS} -fsanitize=address
	@ ${CC} ${SRC_FILE} -o ${OUT_FOLDER}/.${OUT_FILE} ${CFLAGS} -fsanitize=address
	@ cp ${OUT_FOLDER}.gdbinit_asan $(OUT_FOLDER).gdbinit 
	@ sed -i '2 s/.*/(cd \/home\/pwn_heap\/Desktop\/heap_training\/modules\/final\/src\/ \&\& LD_LIBRARY_PATH="\/usr\/lib\/x86_64-linux-gnu" LD_PRELOAD="\/usr\/lib\/x86_64-linux-gnu\/libasan.so.5.0.0 \/home\/pwn_heap\/Desktop\/heap_training\/libc_versions\/2.31\/libc-2.31.so" .\/.server)/g' ./start.sh


patch:
	@ patchelf --set-interpreter ${LIBC_LOADER} ${OUT_FOLDER}/.${OUT_FILE}

clean:
	@ rm ${OUT_FILE}

.PHONY: all build clean
