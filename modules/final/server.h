
/*
Stores the header information for each header

header_name: header_value
*/
struct header {
    char* name; // Key of the header (name)
    char* value; // Value of the header
} header; 

// The first line of an HTTP request
struct request {
    char protocol_no[0x20]; 
    char verb[0x20]; // GET, POST, etc.
    size_t path_len; 
    char* path; //   /some_path
    uint query_amount; 
    struct query* query_params[0x10]; // ?a=1&b=2;
} request; 

struct query {
    char* name; // 'key'
    char* value; // 'value'
} query; 

enum req_type {NONE = 0, PLAIN = 1, FORM=2, HTML=3};
struct body {
    uint length; 
    enum req_type type; 
    void* data_object; // 'char*' for PLAIN - 'struct form_body' for FORM
} body;

struct form_body{
    int count; // Amount of forms
    struct query* query_params[0x10]; // ?a=1&b=2
} form_body;


// The context of the request
struct context {
    char* host; 
    char* user_agent;
    char* origin; 
} context;

// The response of the request to be sent back
struct response {
    int status;  
    char* response_text;
    char* (*default_callback)(); 
} response;

struct route {
    char verb[0x20]; // Verb for the route
    char* route;        // The string for the route
    char* (*handle_callback)();  // When the request is hit, call this functionality
} route; 

// A pointer to a list of pointers of routes
struct route** routes; 

// The main area where the request information is stored at
struct request* begin_request; 
struct header* req_header_lst[0x20];
struct body* body_request; 
struct context* req_context; 

struct header* res_header_lst[0x20]; // List of headers for the response
struct response* whole_response; // Response data to be sent back

// Function declariations
int serve(int sockfd);
int initialize_server(struct route** my_routes);


