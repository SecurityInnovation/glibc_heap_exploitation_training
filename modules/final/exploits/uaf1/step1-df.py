'''
Vulnerability
===================
The 'Connection' header is used to DROP headers within 'interpret_header'.
However, these are NEVER cleared, which results in a use after free
within other uses of 'interpret_header', parse_body and the actual
processing of the headers in 'example.c'.

Eventually, the request information gets cleaned up in 'cleanup_request'. 
At this point, it attempts to clean up the headers in 'req_header_lst'. 
When this happens, it will free the fields of a header and the header itself.
Since we can free the header in 'interpret_header', this leads to an eventual
double free as well. 

The payload below is using the 'Connection' header to free the second 
header 'BBB'. In the next iteration of 'interpret_header', 
it will attempt to use the free chunk from 'BBB' and crash. 
'''

string = "POST /asfdaf HTTP/1.1\r\n"
string += "BBB:CCC\r\n"
string += "Connection:BBB\r\n" # Triggers a use after free on header with key 'BBB'
string += "\r\n"

print(string) 
