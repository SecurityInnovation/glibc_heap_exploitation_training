
/*
Stores the header information for each header

header_name: header_value
*/
struct header {
    char* name; // Key of the header (name)
    size_t name_len;
    char* value; // Value of the header
    size_t value_len; 
    void* (*custom_callback)(); 
}; 

// The first line of an HTTP request
struct line_one_req {
    char protocol_no[0x40]; 
    char verb[0x40]; // GET, POST, etc.
    size_t path_len; 
    char* path; //   /some_path
    uint query_amount; 
    struct query* query_params[0x10]; // ?a=1&b=2;
}; 

// A 'key' query parameter
struct query {
    char* name; // 'key'
    size_t name_len; 
    char* value; // 'value'
    size_t value_len; 
}; 

enum req_type {NONE = 0, PLAIN = 1, FORM=2, HTML=3};
struct body {
    char* id; 
    uint length; 
    enum req_type type; 
    void* data_object; // 'char*' for PLAIN - 'struct form_body*' for FORM
};

struct form_body{
    int count; // Amount of forms
    struct query* query_params[0x10]; // ?a=1&b=2
};

// The context of the request
struct context {
    int host_len; 
    char* host; 
    int user_agent_len;
    char* user_agent;
    int origin_len;
    char* origin; 
};

// The response of the request to be sent back
struct response {
    size_t length; 
    int status;  
    char* response_text;
    char* (*default_callback)(); // 400 error on no file found
};

// A route defined by the user
struct route {
    char verb[0x40]; // Verb for the route
    char* path;        // The string for the route
    struct server_response* (*handle_callback)();  // When the request is hit, call this functionality
};  

struct custom_header {
    char* name; 
    void* (*custom_callback)(); 
};

/*
Data structure to use for a response from an API endpoint
*/
struct server_response {
    size_t length; // Amount of bytes
    char* data;    // A pointer to a list of characters (string) 
    unsigned short status;  // The STATUS of the 200 message
}; 

// A pointer to a list of pointers of routes
struct route** routes; // The routes in the program
// A pointer to a list of custom headers
struct custom_header** custom_headers; 

// State features
int is_authenticated; 
int is_active_connection;

// The main area where the request information is stored at
struct line_one_req* begin_request; 
struct header* req_header_lst[0x30];
struct body* body_request; 
struct context* req_context; 

struct header* res_header_lst[0x20]; // List of headers for the response
struct response* whole_response; // Response data to be sent back


// Function declariations used by 'example.c' 
void serve(int sockfd);
int initialize_server(struct route** my_routes, struct custom_header** my_custom_headers);


