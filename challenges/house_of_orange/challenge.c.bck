#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>



typedef struct plant {
	int weight; 
	int price; 
	char* name;
} plant;

int plant_count; // The amount of plants already created
int plant_upgrades_count; // The amount upgrades on plants
plant* main_plant; // The main plant ptr.

void build_plant(){

	int length; 
	char tmp[20];

	// Creates a struct the size of the plant	
	plant* my_plant = malloc(sizeof(struct plant));		

	// Get the length of the plant	
	printf("Plant name length : ");	
	fgets(tmp, 10, stdin);
	length = atoi(tmp);
	if(length > 0x1000){
		length = 0x1000;
	}

	// Get input for the plant.
	char* plant_name = malloc(length);
	printf("\nPlant name : ");
	read(0, plant_name, length);
	my_plant->name = plant_name;	

	// Get input for the weight 
	printf("Plant Weight : ");
	fgets(tmp, 10, stdin);
	my_plant->weight = atoi(tmp);
	
	main_plant = my_plant;
}

void upgrade_plant(){


}

void see_plant(){
}

void init(){
	setvbuf(stdout, NULL, _IONBF, 0);
}

int main(){
// Three main options...
// Meant to mimic the OG house of orange challege but with easier memory leaks :) 
// Build, rebuild, show 
// Leak heap address, in order to make life easier :) 
init();
	build_plant();	
	

}
