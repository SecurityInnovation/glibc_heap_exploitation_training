'''
The goal of this challenge is to fix a corrupted chunk. 
If you can do this, it demonstrates that you have a fairly good
understanding of a chunk and its metadata. 

Below is the heap layout: 
=============================

bottom 
-----------
top <=============== Edit here
-----------
filler 
-----------
'''
from pwn import * 

mode = 'DEBUG' # Turn on gdb
libc_name='../../../libc_versions/2.23/libc-2.23.so'
env = {}

# Binary setup
elf_name = './.fix_chunk'

elf = ELF(elf_name)
if libc_name != '':
        libc = ELF(libc_name)
        env = {"LD_PRELOAD": libc.path}

# Process creation 
if mode == 'DEBUG':
        p = process([elf.path],env=env)
        gdb.attach(p, gdbscript='''
dir ../../../libc_versions/2.23/
b 36
''')


# If the chunk BEHIND this free or in use? 
# What is the size of the chunk behind this? 
prev_size = p64(0xFFFFFFFFFFFF) # <---------------------- Change here


# What was the previous chunk size, with the metadata? 
# HINT: What would the size of a chunk to malloc(0x100) return? What about malloc(0x90)?
size = p64(0xFFFFFFFFFFFF) # <------------------- Change here
p.sendline(prev_size + size) # <---- Send the data for the chunk
p.interactive()
