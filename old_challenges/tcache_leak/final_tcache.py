'''
Tcache Challenge writeup:
- Run on GLibC version 2.29
'''

from pwn import * 

mode = 'DEBUG' # Turn on gdb
libc_name='../../libc_versions/2.29/libc-2.29.so'
env = {}

# Binary setup
elf_name = './find_the_leak'

elf = ELF(elf_name)
if libc_name != '': 
	libc = ELF(libc_name)
	env = {"LD_PRELOAD": libc.path}
	
# Process creation 
if mode == 'DEBUG': 
	p = process([elf.path],env=env)
	gdb.attach(p, gdbscript='''
dir ../../libc_versions/2.29/
''') 
else: 
	p = remote(domain, port) 

def add(filler, num):
	p.sendlineafter(">", "1") 

	# Send the filler amount
	p.sendlineafter(":", str(filler))

	# Send the num
	p.sendlineafter(":", str(num))
	return 

def edit(index, num):
	p.sendlineafter(">", "2" )
	
	# Send the index 
	p.sendlineafter(":", str(index))
	# Send the new num
	p.sendlineafter(":", str(num))
	return 

def remove(index):
	p.sendlineafter(">", "3") 

	# The index of the kid to free
	p.sendlineafter(":",str(index))

def see_kid(index): 
	p.sendlineafter(">", "2") 

	'''
	# Send the index to view
	p.sendlineafter(":", str(index))

	# Read the name
	p.recvuntil(":") 
	name = p.recvline()

	# Read the age
	p.recvuntil(":")  
	age = p.recvline() 
	return name, age 
	'''


'''
add(0x20, 0)
remove(0)
add(0x28,1)
remove(1)
add(0x30, 2) 
remove(2) 

'''
#for i in range(0, 64 * 0x8, 0x8):
#	add(i, i/0x8) 
#	remove(i/0x8) 
p.interactive()

